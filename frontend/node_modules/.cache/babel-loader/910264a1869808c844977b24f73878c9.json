{"ast":null,"code":"var _jsxFileName = \"/Users/nelson/Developer/ManezCo/frontend/src/components/QuizDashboard/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Pagination } from 'antd';\nimport QuizGrid from '../QuizGrid';\nimport baseUrl from '../../config';\nconst apiPath = 'quiz/';\nconst apiUrl = `${baseUrl}${apiPath}?page=`;\nconst QuizDashboard = () => {\n  const [current, setCurrent] = useState(1);\n  const [quizes, setQuizes] = useState([]);\n  const token = sessionStorage.getItem('token');\n  const [total, setTotal] = useState(0);\n  const get_quizes = async () => {\n    const response = await fetch(apiUrl + current, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    if (response.status !== 200) {\n      alert(response.msg);\n    } else {\n      setQuizes(data.results);\n      setTotal(data.count);\n    }\n  };\n  useEffect(() => {\n    get_quizes();\n  }, [current]);\n  const onChange = page => {\n    setCurrent(page);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(QuizGrid, {\n    quizes: quizes,\n    get_quizes: get_quizes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '15%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Pagination, {\n    current: current,\n    onChange: onChange,\n    pageSize: 6,\n    total: total,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }))));\n};\nexport default QuizDashboard;","map":{"version":3,"names":["React","useEffect","useState","Pagination","QuizGrid","baseUrl","apiPath","apiUrl","QuizDashboard","current","setCurrent","quizes","setQuizes","token","sessionStorage","getItem","total","setTotal","get_quizes","response","fetch","method","headers","data","json","status","alert","msg","results","count","onChange","page","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","position","bottom","pageSize"],"sources":["/Users/nelson/Developer/ManezCo/frontend/src/components/QuizDashboard/index.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Pagination } from 'antd';\nimport QuizGrid from '../QuizGrid';\nimport baseUrl from '../../config';\nconst apiPath = 'quiz/';\nconst apiUrl = `${baseUrl}${apiPath}?page=`;\nconst QuizDashboard = () => {\n  const [current, setCurrent] = useState(1);\n  const [quizes, setQuizes] = useState([]);\n  const token = sessionStorage.getItem('token');\n  const [total, setTotal] = useState(0);\n\n  const get_quizes = async () => {\n    const response = await fetch(apiUrl+current, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      }\n    });\n    const data = await response.json();\n    if (response.status !== 200) {\n      alert(response.msg);\n    } else {\n      setQuizes(data.results);\n      setTotal(data.count);\n    }\n  }\n\n\n  useEffect(() => {\n    get_quizes();\n  },[current]);\n\n  const onChange = (page) => {\n    setCurrent(page);\n  };\n\n\n  return(\n  <>\n    <QuizGrid quizes={quizes} get_quizes={get_quizes}/>\n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'flex-end'}}>\n      <div style={{ position:'fixed', bottom:'15%'}}>\n        <Pagination current={current} onChange={onChange} pageSize={6} total={total} />\n      </div>\n    </div>\n\n\n\n  </>)\n\n\n};\nexport default QuizDashboard;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAASC,UAAU,QAAQ,MAAM;AACjC,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAOC,OAAO,MAAM,cAAc;AAClC,MAAMC,OAAO,GAAG,OAAO;AACvB,MAAMC,MAAM,GAAI,GAAEF,OAAQ,GAAEC,OAAQ,QAAO;AAC3C,MAAME,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMW,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMgB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACb,MAAM,GAACE,OAAO,EAAE;MAC3CY,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAG,UAAST,KAAM;MACnC;IACF,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;MAC3BC,KAAK,CAACP,QAAQ,CAACQ,GAAG,CAAC;IACrB,CAAC,MAAM;MACLf,SAAS,CAACW,IAAI,CAACK,OAAO,CAAC;MACvBX,QAAQ,CAACM,IAAI,CAACM,KAAK,CAAC;IACtB;EACF,CAAC;EAGD5B,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,CAAC;EACd,CAAC,EAAC,CAACT,OAAO,CAAC,CAAC;EAEZ,MAAMqB,QAAQ,GAAIC,IAAI,IAAK;IACzBrB,UAAU,CAACqB,IAAI,CAAC;EAClB,CAAC;EAGD,oBACA/B,KAAA,CAAAgC,aAAA,CAAAhC,KAAA,CAAAiC,QAAA,qBACEjC,KAAA,CAAAgC,aAAA,CAAC5B,QAAQ;IAACO,MAAM,EAAEA,MAAO;IAACO,UAAU,EAAEA,UAAW;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eACnDvC,KAAA,CAAAgC,aAAA;IAAKQ,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAU,CAAE;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/EvC,KAAA,CAAAgC,aAAA;IAAKQ,KAAK,EAAE;MAAEI,QAAQ,EAAC,OAAO;MAAEC,MAAM,EAAC;IAAK,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5CvC,KAAA,CAAAgC,aAAA,CAAC7B,UAAU;IAACM,OAAO,EAAEA,OAAQ;IAACqB,QAAQ,EAAEA,QAAS;IAACgB,QAAQ,EAAE,CAAE;IAAC9B,KAAK,EAAEA,KAAM;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC3E,CACF,CAIL,CAAC;AAGL,CAAC;AACD,eAAe/B,aAAa"},"metadata":{},"sourceType":"module"}