{"ast":null,"code":"var _jsxFileName = \"/Users/nelson/Developer/ManezCo/frontend/src/components/QuizTestModal/index.js\";\nimport React, { useState } from 'react';\nimport { Button, Modal } from 'antd';\nimport TestBlock from '../TestBlock';\nimport baseUrl from '../../config';\nconst apiPath = 'quiz/';\nconst apiUrl = `${baseUrl}${apiPath}`;\nconst token = sessionStorage.getItem('token');\nconst QuizTestModal = props => {\n  const [quizzes, setQuizzes] = useState({});\n  const [quizData, setQuizData] = useState([]);\n  const get_quizzes = async () => {\n    const response = await fetch(apiUrl + props.title, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    if (response.status !== 200) {\n      alert(response.msg);\n    } else {\n      setQuizData(data.results);\n      let temp_quizzes = {};\n      for (let i of data.results) {\n        temp_quizzes[i.id] = null;\n      }\n      setQuizzes(temp_quizzes);\n    }\n  };\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const showModal = () => {\n    get_quizzes();\n    setIsModalOpen(true);\n  };\n  const handleOk = () => {\n    submit_quizzes();\n  };\n  const handleCancel = () => {\n    const userConfirmed = window.confirm(\"Are you sure you want to exit the quiz?\");\n    if (userConfirmed) {\n      setQuizzes({});\n      setQuizData([]);\n      setIsModalOpen(false);\n    }\n  };\n  const submit_quizzes = async () => {\n    for (let i in quizzes) {\n      if (quizzes[i] === null) {\n        alert(\"Please finish all the questions!\");\n        return;\n      }\n    }\n    for (let i in quizzes) {\n      if (Array.isArray(quizzes[i])) {\n        quizzes[i] = quizzes[i].join(\",\");\n      }\n    }\n    const response = await fetch(baseUrl + \"quiz/attempts_quizzes_lesson/\", {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify({\n        quizzes: quizzes\n      })\n    });\n    const data = await response.json();\n    if (response.status !== 200) {\n      alert(response.msg);\n      return;\n    }\n    if (data.results.correct === 0 || data.results.correct === 1) {\n      alert(`You have finished the quiz! You get ${data.results.mark} points! ${data.results.correct} question is correct!`);\n    } else {\n      alert(`You have finished the quiz! You get ${data.results.mark} points! ${data.results.correct} questions are correct!`);\n    }\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    size: \"large\",\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(Modal, {\n    key: isModalOpen,\n    title: props.title,\n    open: isModalOpen,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    width: 800,\n    maskClosable: false,\n    closeIcon: false,\n    okText: \"Submit\",\n    cancelText: \"Exit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TestBlock, {\n    setQuizzes: setQuizzes,\n    quizzes: quizzes,\n    quizData: quizData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })));\n};\nexport default QuizTestModal;","map":{"version":3,"names":["React","useState","Button","Modal","TestBlock","baseUrl","apiPath","apiUrl","token","sessionStorage","getItem","QuizTestModal","props","quizzes","setQuizzes","quizData","setQuizData","get_quizzes","response","fetch","title","method","headers","data","json","status","alert","msg","results","temp_quizzes","i","id","isModalOpen","setIsModalOpen","showModal","handleOk","submit_quizzes","handleCancel","userConfirmed","window","confirm","Array","isArray","join","body","JSON","stringify","correct","mark","createElement","Fragment","type","size","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","key","open","onOk","onCancel","width","maskClosable","closeIcon","okText","cancelText"],"sources":["/Users/nelson/Developer/ManezCo/frontend/src/components/QuizTestModal/index.js"],"sourcesContent":["import React, {  useState } from 'react';\nimport { Button, Modal } from 'antd';\nimport TestBlock from '../TestBlock';\nimport baseUrl from '../../config';\nconst apiPath = 'quiz/';\nconst apiUrl = `${baseUrl}${apiPath}`;\nconst token = sessionStorage.getItem('token');\n\nconst QuizTestModal = (props) => {\n  const [quizzes, setQuizzes] = useState({});\n  const [quizData, setQuizData] = useState([]);\n  const get_quizzes = async () => {\n    const response = await fetch(apiUrl+props.title, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n      }\n    });\n    const data = await response.json();\n    if (response.status !== 200) {\n      alert(response.msg);\n    }\n    else{\n      setQuizData(data.results);\n      let temp_quizzes = {};\n      for (let i of data.results) {\n        temp_quizzes[i.id] = null;\n      }\n      setQuizzes(temp_quizzes);\n    }\n  }\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const showModal = () => {\n    get_quizzes();\n    setIsModalOpen(true);\n  };\n\n  const handleOk = () => {\n    submit_quizzes();\n  };\n\n  const handleCancel = () => {\n    const userConfirmed = window.confirm(\"Are you sure you want to exit the quiz?\");\n    if (userConfirmed) {\n      setQuizzes({});\n      setQuizData([]);\n      setIsModalOpen(false);\n    }\n  };\n  \n\n  const submit_quizzes = async()=>{\n    for (let i in quizzes) {\n      if(quizzes[i]===null){\n        alert(\"Please finish all the questions!\");\n        return;\n      }\n    }\n    for (let i in quizzes) {\n      if(Array.isArray(quizzes[i])){\n        quizzes[i] = quizzes[i].join(\",\");\n      }\n    }\n    const response = await fetch(baseUrl+\"quiz/attempts_quizzes_lesson/\", {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        quizzes:quizzes,\n      })\n    });\n    const data = await response.json();\n    if (response.status !== 200) {\n      alert(response.msg);\n      return;\n    }\n    if(data.results.correct===0 || data.results.correct===1){\n      alert(`You have finished the quiz! You get ${data.results.mark} points! ${data.results.correct} question is correct!`);\n    }else{\n      alert(`You have finished the quiz! You get ${data.results.mark} points! ${data.results.correct} questions are correct!`);\n    }\n    setIsModalOpen(false);\n  }\n\n  return (\n    <>\n      <Button type=\"primary\" size=\"large\" onClick={showModal}>\n        Start\n      </Button>\n      <Modal key={isModalOpen} title={props.title} open={isModalOpen} onOk={handleOk} onCancel={handleCancel} width={800} maskClosable={false} closeIcon={false}\n      okText='Submit' cancelText='Exit'>\n        <TestBlock setQuizzes={setQuizzes} quizzes={quizzes} quizData={quizData}/>\n      </Modal>\n    </>\n  );\n};\n\nexport default QuizTestModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}